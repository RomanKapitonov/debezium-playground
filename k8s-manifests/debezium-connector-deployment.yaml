apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o k8s-manifests/
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: debezium-connector
  name: debezium-connector
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: debezium-connector
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o k8s-manifests/
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/debezium-play-default: "true"
        io.kompose.service: debezium-connector
    spec:
      containers:
        - env:
            - name: BOOTSTRAP_SERVERS
              value: kafka:9092
            - name: CONFIG_STORAGE_TOPIC
              value: my_connect_configs
            - name: GROUP_ID
              value: "1"
            - name: OFFSET_STORAGE_TOPIC
              value: my_connect_offsets
            - name: STATUS_STORAGE_TOPIC
              value: my_connect_statuses
          image: debezium/connect:2.1
          name: debezium-connector
          ports:
            - containerPort: 8083
          resources: {}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  if curl -s http://0.0.0.0:8083/connectors/mysql-connector/status | \
                      grep -q "\"state\":\"FAILED\""; then
                    exit 1
                  else
                    exit 0
                  fi
            initialDelaySeconds: 120
            periodSeconds: 30
      restartPolicy: Always
status: {}
